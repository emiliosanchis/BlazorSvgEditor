@using BlazorSvgEditor.SvgEditor.Helper
@using BlazorSvgEditor.SvgEditor.Misc
@using BlazorSvgEditor.SvgEditor.Shapes
@inherits ShapeEditor<Polygon>

<polygon @ref=ElementReference

         @onpointerdown="Select"
         @onclick="ClickShape"
         @onpointerenter="Enter"
         @onpointerleave="Leave"

         points="@SvgElement.PointsString"

         stroke="@SvgElement.Stroke"
         stroke-width="@SvgElement.StrokeWidth"
         stroke-linecap="@SvgElement.StrokeLinecap"
         stroke-linejoin="@SvgElement.StrokeLinejoin"
         stroke-dasharray="@SvgElement.StrokeDasharray"
         stroke-dashoffset="@SvgElement.StrokeDashoffset.ToInvString()"

         fill="@SvgElement.Fill"
         fill-opacity="@SvgElement.FillOpacity.ToInvString()"

         style="cursor: @(SvgElement.State == ShapeState.Selected ? "move" : "pointer")">

</polygon>


@if (SvgElement.State == ShapeState.Selected && SvgElement.SvgEditor.EditMode != EditMode.Add && SvgElement.SvgEditor.EditMode != EditMode.Move)
{
    for (int i = 0; i < SvgElement.Points.Count; i++)
    {
        int j = i;
        <Anchor RingColor="@SvgElement.Color" OnPointerDown="() => OnAnchorSelected(j)" CssCursor="nwse-resize" Position="new Coord<double>(SvgElement.Points[i].X, SvgElement.Points[i].Y)"
                OnDoubleClick="() => SvgElement.OnAnchorDoubleClicked(j)" SvgEditor="SvgElement.SvgEditor"/>

        var firstPointIndex = i;
        var secondPointIndex = i + 1;

        if (secondPointIndex >= SvgElement.Points.Count) secondPointIndex = 0;


        <Anchor RingColor="grey" OnPointerDown="() => OnAnchorSelected(j + SvgElement.Points.Count)" CssCursor="nwse-resize" ScaleFactor="0.5"
                Position="new Coord<double>((SvgElement.Points[firstPointIndex].X + SvgElement.Points[secondPointIndex].X) / 2, (SvgElement.Points[firstPointIndex].Y + SvgElement.Points[secondPointIndex].Y) / 2)" SvgEditor="SvgElement.SvgEditor"/>
    }
}

@if (SvgElement.State == ShapeState.Selected && SvgElement.SvgEditor.EditMode == EditMode.Add)
{
    for (int i = 0; i < SvgElement.Points.Count; i++)
    {
        if (i == 0)
        {
            <Anchor CssCursor="nwse-resize" Position="new Coord<double>(SvgElement.Points[i].X, SvgElement.Points[i].Y)"
                    RingColor="red" SvgEditor="SvgElement.SvgEditor"/>
        }
        else if (i == SvgElement.Points.Count - 1)
        {
            <Anchor CssCursor="nwse-resize" Position="new Coord<double>(SvgElement.Points[i].X, SvgElement.Points[i].Y)"
                    RingColor="green" SvgEditor="SvgElement.SvgEditor"/>
        }

        else
        {
            <Anchor CssCursor="nwse-resize" Position="new Coord<double>(SvgElement.Points[i].X, SvgElement.Points[i].Y)"
                    RingColor="grey" SvgEditor="SvgElement.SvgEditor"/>
        }
    }
}